
//Write a program that returns the largest number of palindrome,
//which is the product of two simple five - digit numbers,
//and also returns the factors themselves.

#include "stdafx.h"
#include<iostream>
#include<vector>
#include<iterator>
#include<string>
#include<ctime>



using namespace std;

unsigned int start_time = clock();

int prime(int n)
{
	for (int i = 2; i <= sqrt(n); i++)
		if (n%i == 0)
			return 0;
	return n;
}

bool check_polindrom(string word)
{
	unsigned _int64 len = word.length();
	for (int i = 0; i < len / 2; ++i)
	{
		if (word[i] != word[len - i - 1])
		{
			return false;
		}
	}
	return true;
}


int main()
{
	vector<int> Ar;
	int n = 0;
	for (int i = 10000; i <= 99999; i++)
	{
		int j = prime(i);

		if (j != 0)
		{
			Ar.push_back(i);
		}
		else;
	}

	long long max = 0;
	long long S = 0;
	int i1 = 0;
	int j1 = 0;

	for (int i = 0; i < Ar.size(); i++)
	{
		for (int j = 0; j < Ar.size(); j++)
		{
			long long A = Ar[i];
			long long B = Ar[j];
			S = A * B;
			string St = to_string(S);
			if (check_polindrom(St) == true) {
				if (S > max) {
					max = S;
					i1 = A;
					j1 = B;
					cout << "i" << "(" << i << ") = " << i1 << " * " << "j" << "(" << j << ") = " << j1 << " ; " << "max = " << max << endl;
				}
			}
		}
	}

	cout << endl;
	cout << "Max_polindrome = " << max << endl;

	unsigned int end_time = clock();
	unsigned int search_time = end_time - start_time;

	cout << "runtime = " << search_time / 1000.0 << " sec " << endl;

	system("pause");
	return 0;

}
